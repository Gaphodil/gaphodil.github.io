import{p as I,q as k,_ as j,o as g,c as _,w as s,V as l,a,b as e,t as x,g as t,e as G,h as i,s as d,f as m,i as A,n as h,j as V,k as O,l as S,m as T,r as C}from"./VMain-PHcqEsPV.js";import{V as f,_ as B,a as J}from"./VImg-VDU-O_at.js";const P="/assets/stardew-better-jukebox-M7KaugIA.webp",M="/assets/jubilee-practice-mod-cmLjUf9N.webp",E=6;var y=I([...Array(E).keys()]),u=k(!1);function H(){y.reverse(),u.value=!u.value}const L={data(){return{autosplitterText:"A functionality of the program LiveSplit to recognize when a program         is being run and automatically 'split' when certain conditions are met",itemOrders:y,reversed:u,reverseOrder:H}}},N=t("h2",null,"Projects",-1),R=t("p",null,"These are a handful of small projects I've created on my own time.",-1),W=t("p",null,[t("i",null,"May 2020 - Apr 2024 | C#")],-1),D=t("p",null,[t("a",{href:"https://github.com/Gaphodil/BetterJukebox"},"GitHub")],-1),K=t("a",{href:"https://store.steampowered.com/app/413150"},"Stardew Valley",-1),z=t("p",null,[t("i",null,"Dec 2023 | GameMaker Language")],-1),F=t("p",null,[t("a",{href:"https://github.com/Gaphodil/jubilee-practice-mod"},"GitHub")],-1),U=t("a",{href:"https://store.steampowered.com/app/1774220"},"Jubilee",-1),q=t("p",null,[t("i",null,"Various | Auto Splitting Language (C#)")],-1),Y=t("p",null,[t("a",{href:"https://github.com/Gaphodil/iwehh-autosplitter"},"I Wanna Escape Heavenly Host"),i(" | "),t("a",{href:"https://github.com/Gaphodil/Jubilee-Autosplitter"},"Jubilee"),i(" | "),t("a",{href:"https://github.com/Gaphodil/autosplitters"},"Everything Else")],-1),Q=t("a",{href:"https://livesplit.org"},"LiveSplit",-1),X=t("p",null,[t("i",null,"Jan 2024 - Present | Vuetify, Vue.js")],-1),Z=t("p",null," You're looking at it! ",-1),$=t("p",null,[t("i",null,"Mar 2024 - Present | Godot, GDScript")],-1),ee=t("p",null,[t("a",{href:"https://github.com/Gaphodil/ReloadedK-Engine-Gaph-Fork"},"GitHub"),i(" | "),t("a",{href:"https://github.com/ReloadedK-git/ReloadedKs-Godot-Fangame-Engine"},"Original")],-1),te=t("p",null,` I decided to start experimenting with some IWBTG fangame ideas I'd had, and since they weren't easily feasible to implement outside of Godot, I started with the most complete community engine currently available. As I learned more about GDScript over the course of the month, I started implementing non-specific changes that I felt could be immediately useful to others, and so created a fork to mirror my additions without needing to open-source my own project before it's ready for release. The largest addition was the overhaul to the in-game settings system, with algorithmic menu generation and an API to simplify the getting and, well, "setting" of settings, as well as the saving and loading. `,-1);function se(w,c,v,p,o,ae){const r=B,n=J;return g(),_(m,null,{default:s(()=>[e(l,{justify:"center","justify-sm":"end"},{default:s(()=>[e(a,{cols:"12"},{default:s(()=>[N,R]),_:1}),e(a,{cols:"auto","align-self":"center"},{default:s(()=>[t("p",null,"Sorted by: "+x(o.reversed?"Reverse-Chronological":"Chronological"),1)]),_:1}),e(a,{cols:"auto","align-self":"end"},{default:s(()=>[e(G,{style:{"justify-self":"center"},"aria-label":"Change Sort",title:"Change Sort",class:"bg-primary",icon:o.reversed?"mdi-sort-descending":"mdi-sort-ascending",onClick:o.reverseOrder},null,8,["icon","onClick"])]),_:1})]),_:1}),e(l,null,{default:s(()=>[e(n,{"simple-title":"Stardew Valley - Better Jukebox Mod",order:o.itemOrders[0],"img-left":o.itemOrders[0]%2===0},{image:s(()=>[e(f,{src:P,alt:`A screenshot of a user interface from Stardew Valley.\r
            It is titled 'Jukebox' and displays a variety of songs to choose from.`})]),content:s(()=>[W,D,t("p",null,[i(" The jukebox item in "),K,e(r,{text:"A farming-themed life simulator"}),i(" allows a player to listen to songs from the game at their home. The way to select a song requires navigating forward or back one song at a time, which I felt was tedious, so I made my own version of the menu that allowed for more intuitive scrolling. ")])]),_:1},8,["order","img-left"]),e(n,{"simple-title":"Jubilee - Practice Mod",order:o.itemOrders[1],"img-left":o.itemOrders[1]%2===0},{image:s(()=>[e(f,{src:M,alt:`A screenshot of Jubilee. The main character is mid-jump.\r
            On the left side, a number of technical details about\r
            the game's current state are displayed.`})]),content:s(()=>[z,F,t("p",null,[i(" I've a fondness for "),U,e(r,{text:"A simple precision platformer"}),i(", having speedran it for a bit. While its fastest categories are too difficult for me to care to return to, I did enjoy coming back and updating its autosplitter "),e(r,{margin:!1,text:o.autosplitterText},null,8,["text"]),i(", as well as exploring and editing its code to create this. It was also fun to look at a commercial project using Gamemaker Studio, given that it's one of the common fangame engines. ")])]),_:1},8,["order","img-left"]),e(n,{"simple-title":"A Bunch Of Autosplitters",order:o.itemOrders[2],"img-left":o.itemOrders[2]%2===0},{image:s(()=>[e(l,{"align-self":"stretch",class:"align-center justify-center"},{default:s(()=>[e(a,{cols:"auto"},{default:s(()=>[e(d,{icon:"mdi-camera-off"})]),_:1})]),_:1})]),content:s(()=>[q,Y,t("p",null,[i(" It started as a way to ease the use of "),Q,e(r,{text:"A timer for speedruns that can also track fastest times on individual segments"}),i(" for the games I enjoyed, but it's no fun having slightly specialized knowledge and not making use of it. Most of the games I've created autosplitters "),e(r,{margin:!1,text:o.autosplitterText,"aria-hidden":"true"},null,8,["text"]),i(" for use Gamemaker Studio as their engine, which coincidentally stores its global variables in an incredibly clear way and makes it very easy to start with. ")])]),_:1},8,["order","img-left"]),e(n,{"simple-title":"This Website",order:o.itemOrders[3],"img-left":o.itemOrders[3]%2===0},{image:s(()=>[e(l,{"align-self":"stretch",class:"align-center justify-center"},{default:s(()=>[e(a,{cols:"auto"},{default:s(()=>[e(d,{icon:"mdi-camera-off"})]),_:1})]),_:1})]),content:s(()=>[X,Z]),_:1},8,["order","img-left"]),e(n,{"simple-title":"IWBTG Godot Project Template Fork",order:o.itemOrders[4],"img-left":o.itemOrders[4]%2===0},{image:s(()=>[e(l,{"align-self":"stretch",class:"align-center justify-center"},{default:s(()=>[e(a,{cols:"auto"},{default:s(()=>[e(d,{icon:"mdi-camera-off"})]),_:1})]),_:1})]),content:s(()=>[$,ee,te]),_:1},8,["order","img-left"])]),_:1})]),_:1})}const oe=j(L,[["render",se]]),ie={__name:"App",setup(w){return(c,v)=>{const p=O,o=S;return g(),_(A,null,{default:s(()=>[e(V,null,{default:s(()=>[e(m,{class:h(c.$vuetify.display.lgAndUp?"w-75":"")},{default:s(()=>[e(p)]),_:1},8,["class"]),e(m,{class:h(c.$vuetify.display.lgAndUp?"w-75":"")},{default:s(()=>[e(o),e(oe)]),_:1},8,["class"])]),_:1})]),_:1})}}},b=T(ie);C(b);b.mount("#app");
